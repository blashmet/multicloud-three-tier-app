{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./node_modules/tslib/tslib.es6.js","./src/Shared/Services/data.service.ts","./src/Shared/Util/utilFilters.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.init.ts","./src/app/app.module.ts","./src/environments/dynamic-environment.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<!-- Load the latest version -->\\r\\n\\r\\n\\r\\n<div class=\\\"main-container\\\">\\r\\n  <div class=\\\"alert alert-app-level\\\">\\r\\n  </div>\\r\\n  <header class=\\\"header header-6\\\">\\r\\n    <div class=\\\"branding\\\">\\r\\n      <a href=\\\"...\\\" class=\\\"nav-link\\\">\\r\\n        <clr-icon shape=\\\"cloud\\\"></clr-icon>\\r\\n        <span class=\\\"title\\\">Killer Demo</span>\\r\\n      </a>\\r\\n    </div>\\r\\n    <div class=\\\"header-nav\\\">\\r\\n      <a href=\\\"javascript://\\\" class=\\\"active nav-link nav-text\\\">Employee Onboarding Task Management</a>\\r\\n    </div>\\r\\n    <div class=\\\"header-actions\\\">\\r\\n      <a href=\\\"javascript://\\\" class=\\\"nav-link nav-icon-text\\\" aria-label=\\\"Redis Browser\\\">\\r\\n        <clr-icon shape=\\\"cog\\\"></clr-icon>\\r\\n        <span class=\\\"nav-text\\\">Version: {{ this.env.version }}</span>\\r\\n      </a>\\r\\n\\r\\n    </div>\\r\\n  </header>\\r\\n\\r\\n  <div class=\\\"content-container\\\">\\r\\n    <div class=\\\"content-area\\\">\\r\\n      <div class=\\\"clr-row\\\">\\r\\n        <div class=\\\"clr-col-lg-7 clr-col-md-12 clr-col-12\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n              New Employees\\r\\n            </div>\\r\\n            <div class=\\\"card-block\\\">\\r\\n              <div class=\\\"card-text\\\">\\r\\n                <clr-datagrid>\\r\\n                  <clr-dg-column>\\r\\n                    Name\\r\\n                    <clr-dg-string-filter [clrDgStringFilter]=\\\"empNameFilter\\\"></clr-dg-string-filter>\\r\\n                  </clr-dg-column>\\r\\n                  <clr-dg-column></clr-dg-column>\\r\\n                  <clr-dg-column>Address</clr-dg-column>\\r\\n                  <clr-dg-column>State</clr-dg-column>\\r\\n                  <clr-dg-column>Email</clr-dg-column>\\r\\n                  <clr-dg-column></clr-dg-column>\\r\\n\\r\\n                  <clr-dg-row *ngFor=\\\"let x of AddressItems | async | slice:0:5; let i=index\\\">\\r\\n                    <clr-dg-cell class=\\\"left\\\">{{x.firstname +\\\" \\\"+x.lastname}}</clr-dg-cell>\\r\\n                    <clr-dg-cell><img src=\\\"{{x.profilepicture}}\\\" class=\\\"inline-profile-pic\\\" /></clr-dg-cell>\\r\\n                    <clr-dg-cell>{{x.streetaddress}}</clr-dg-cell>\\r\\n                    <clr-dg-cell>{{x.state}}</clr-dg-cell>\\r\\n                    <clr-dg-cell>{{x.email}}</clr-dg-cell>\\r\\n                    <clr-dg-cell><a class=\\\"btn btn-link btn-sm\\\" (click)=\\\"editAddress(x);quickAddAddress = true\\\">Edit</a></clr-dg-cell>\\r\\n\\r\\n                  </clr-dg-row>\\r\\n                  <clr-dg-footer>{{(AddressItems | async)?.length}} total employees</clr-dg-footer>\\r\\n                </clr-datagrid>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n              <button class=\\\"btn btn-sm btn-link\\\" (click)=\\\"quickAddAddress = true\\\">Quick Add</button>\\r\\n              <button class=\\\"btn btn-sm btn-link\\\" (click)=\\\"fullListAddress = true\\\">View All Items</button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"clr-col-lg-5 clr-col-md-12 clr-col-12\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n              Employee Onboarding Tasks\\r\\n            </div>\\r\\n            <div class=\\\"card-block\\\">\\r\\n              <div class=\\\"card-text\\\">\\r\\n                <clr-datagrid>\\r\\n                  <clr-dg-column>Task</clr-dg-column>\\r\\n                  <clr-dg-column>\\r\\n                    Employee\\r\\n                    <clr-dg-string-filter [clrDgStringFilter]=\\\"nameFilter\\\"></clr-dg-string-filter>\\r\\n                  </clr-dg-column>\\r\\n                  <clr-dg-column>Due date</clr-dg-column>\\r\\n                  <clr-dg-column>\\r\\n                    Assigned To\\r\\n                    <clr-dg-string-filter [clrDgStringFilter]=\\\"createdByFilter\\\"></clr-dg-string-filter>\\r\\n                  </clr-dg-column>\\r\\n                  <clr-dg-column></clr-dg-column>\\r\\n\\r\\n                  <clr-dg-row *ngFor=\\\"let x of todoItems | async | slice:0:5; let i=index\\\">\\r\\n                    <clr-dg-cell class=\\\"left\\\">{{x.todoText}}</clr-dg-cell>\\r\\n                    <clr-dg-cell>{{x.employeeName}}</clr-dg-cell>\\r\\n                    <clr-dg-cell>{{x.dueDate | date: 'mediumDate'}}</clr-dg-cell>\\r\\n                    <clr-dg-cell>{{x.createdBy}}</clr-dg-cell>\\r\\n                    <clr-dg-cell><a class=\\\"btn btn-link btn-sm\\\" (click)=\\\"editTodo(x);quickAddTodo = true\\\">Edit</a></clr-dg-cell>\\r\\n                  </clr-dg-row>\\r\\n\\r\\n                  <clr-dg-footer>{{(todoItems | async)?.length}} total tasks</clr-dg-footer>\\r\\n                </clr-datagrid>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n              <button class=\\\"btn btn-sm btn-link\\\" (click)=\\\"quickAddTodo = true\\\">Quick Add</button>\\r\\n              <button class=\\\"btn btn-sm btn-link\\\" (click)=\\\"fullListTodo = true\\\">View All Items</button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"clr-row\\\" style=\\\"visibility: hidden\\\">\\r\\n          <div class=\\\"clr-col-lg-12 clr-col-md-12 clr-col-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header\\\">\\r\\n                Tasks Being Completed\\r\\n              </div>\\r\\n              <div class=\\\"card-block\\\">\\r\\n\\r\\n                <div class=\\\"card-text\\\">\\r\\n                  <table class=\\\"table table-compact \\\" *ngIf='signalRService.data'>\\r\\n                    <thead>\\r\\n                      <tr>\\r\\n                        <th class=\\\"left\\\">Client</th>\\r\\n                        <th>Task</th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                      <tr *ngFor=\\\"let x of signalRService.data\\\">\\r\\n                        <td class=\\\"left\\\">{{ x.name }}</td>\\r\\n                        <td >{{ x.value }}</td>\\r\\n                      </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"card-footer\\\">\\r\\n                <button class=\\\"btn btn-sm btn-link\\\"></button>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"clr-row\\\">\\r\\n          <button class=\\\"btn btn-sm btn-link\\\" (click)=\\\"technicalInformation = true\\\">Technical Information</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n<form [formGroup]=\\\"todoForm\\\">\\r\\n  <clr-modal [(clrModalOpen)]=\\\"quickAddTodo\\\" [clrModalSize]=\\\"'lg'\\\">\\r\\n\\r\\n    <h3 class=\\\"modal-title\\\">Quick Add Onboarding Task</h3>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n\\r\\n      <clr-input-container>\\r\\n        <label>Onboarding Task:</label>\\r\\n        <input type=\\\"text\\\" clrInput placeholder=\\\"Onboardning Task\\\" formControlName=\\\"todoText\\\">\\r\\n      </clr-input-container>\\r\\n      <clr-select-container>\\r\\n        <label>Employee Name:</label>\\r\\n        <select clrSelect formControlName=\\\"employeeId\\\" (change)=\\\"onChange($event)\\\">\\r\\n          <option value=\\\"\\\" disabled>Choose Employee</option>\\r\\n          <option *ngFor=\\\"let x of AddressItems | async\\\" [ngValue]=\\\"x.id\\\">{{x.firstname +\\\" \\\"+x.lastname}}</option>\\r\\n        </select>\\r\\n      </clr-select-container>\\r\\n      <clr-date-container>\\r\\n        <label>\\r\\n          Due Date:\\r\\n        </label>\\r\\n        <input type=\\\"date\\\" clrDate name=\\\"dueDate\\\"placeholder=\\\"Due Date\\\"  formControlName=\\\"dueDate\\\">\\r\\n      </clr-date-container>\\r\\n      <clr-input-container>\\r\\n        <label>\\r\\n          Assigned To:\\r\\n        </label>\\r\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"createdBy\\\" placeholder=\\\"Assigned To\\\" >\\r\\n      </clr-input-container>\\r\\n      <clr-input-container>\\r\\n        <input type=\\\"text\\\" clr-hidden formControlName=\\\"id\\\">\\r\\n        <input type=\\\"text\\\" clr-hidden formControlName=\\\"employeeName\\\">\\r\\n        <input type=\\\"text\\\" clr-hidden formControlName=\\\"createdDate\\\">\\r\\n      </clr-input-container>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"quickAddTodo = false\\\">Cancel</button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onTodoSubmit();quickAddTodo = false\\\" [disabled]=\\\"!todoForm.valid\\\">Save</button>\\r\\n    </div>\\r\\n  </clr-modal>\\r\\n</form>\\r\\n\\r\\n<form [formGroup]=\\\"addressForm\\\">\\r\\n  <clr-modal [(clrModalOpen)]=\\\"quickAddAddress\\\" [clrModalSize]=\\\"'lg'\\\">\\r\\n\\r\\n    <h3 class=\\\"modal-title\\\">Quick Add Employee</h3>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"clr-row\\\">\\r\\n        <div class=\\\"clr-col-3\\\">\\r\\n          <div class=\\\"clr-row\\\">\\r\\n            <div class=\\\"clr-col-12\\\">\\r\\n              <img [src]=\\\"ppData\\\" class=\\\"clr-col-12\\\" />\\r\\n              <div class=\\\"clr-file-wrapper clr-col-12\\\">\\r\\n                <label for=\\\"basic\\\" class=\\\"clr-control-label\\\"><span class=\\\"btn btn-sm\\\">browse</span></label>\\r\\n                <input type=\\\"file\\\" id=\\\"basic\\\" placeholder=\\\"Enter value here\\\" class=\\\"clr-file\\\" (change)=\\\"uploadFile($event)\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"clr-col-9\\\">\\r\\n          <div class=\\\"clr-row\\\">\\r\\n            <div class=\\\"clr-col-4\\\">\\r\\n              <clr-input-container>\\r\\n                <label>First Name:</label>\\r\\n                <input type=\\\"text\\\" clrInput formControlName=\\\"firstname\\\">\\r\\n              </clr-input-container>\\r\\n            </div>\\r\\n            <div class=\\\"clr-col-4\\\">\\r\\n              <clr-input-container>\\r\\n                <label>\\r\\n                  Last Name:\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" clrInput formControlName=\\\"lastname\\\">\\r\\n              </clr-input-container>\\r\\n            </div>\\r\\n            <div class=\\\"clr-col-4\\\">\\r\\n              <clr-input-container>\\r\\n                <label>\\r\\n                  Email:\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" clrInput formControlName=\\\"email\\\">\\r\\n              </clr-input-container>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"clr-row\\\">\\r\\n            <div class=\\\"clr-col-8\\\">\\r\\n              <clr-input-container>\\r\\n                <label>\\r\\n                  Street Address:\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" clrInput formControlName=\\\"streetaddress\\\">\\r\\n              </clr-input-container>\\r\\n            </div>\\r\\n            <div class=\\\"clr-col-4\\\">\\r\\n              <clr-input-container>\\r\\n                <label>\\r\\n                  City:\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" clrInput formControlName=\\\"city\\\">\\r\\n              </clr-input-container>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"clr-row\\\">\\r\\n            <div class=\\\"clr-col-4\\\">\\r\\n              <clr-input-container>\\r\\n                <label>\\r\\n                  State:\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" clrInput formControlName=\\\"state\\\">\\r\\n              </clr-input-container>\\r\\n            </div>\\r\\n            <div class=\\\"clr-col-4\\\">\\r\\n              <clr-input-container>\\r\\n                <label>\\r\\n                  Zip:\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" clrInput formControlName=\\\"zip\\\">\\r\\n              </clr-input-container>\\r\\n            </div>\\r\\n            <div class=\\\"clr-col-4\\\">\\r\\n              <clr-input-container>\\r\\n                <label>\\r\\n                  Phone:\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" clrInput formControlName=\\\"phone\\\">\\r\\n              </clr-input-container>\\r\\n            </div>\\r\\n          </div>                    \\r\\n          <clr-input-container>\\r\\n            <input type=\\\"text\\\" clr-hidden formControlName=\\\"id\\\">\\r\\n            <input type=\\\"text\\\" clr-hidden formControlName=\\\"createdon\\\">\\r\\n            <input type=\\\"text\\\" clr-hidden formControlName=\\\"profilepicture\\\">\\r\\n          </clr-input-container>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" (click)=\\\"quickAddAddress = false\\\">Cancel</button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onAddressSubmit();quickAddAddress = false\\\">Save</button>\\r\\n    </div>\\r\\n  </clr-modal>\\r\\n</form>\\r\\n\\r\\n<clr-modal [(clrModalOpen)]=\\\"fullListTodo\\\" [clrModalSize]=\\\"'xl'\\\">\\r\\n  <h3 class=\\\"modal-title\\\">All Employee Onboarding Tasks</h3>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th class=\\\"left\\\">Task</th>\\r\\n          <th>Employee</th>\\r\\n          <th>Assigned To </th>\\r\\n          <th>Created Date</th>\\r\\n          <th>Due</th>\\r\\n          <th></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let x of todoItems | async\\\">\\r\\n          <td class=\\\"left\\\">{{ x.todoText }}</td>\\r\\n          <td class=\\\"left\\\">{{ x.employeeName}}</td>\\r\\n          <td>{{ x.createdBy }}</td>\\r\\n          <td>{{ x.createdDate | date: 'mediumDate'}}</td>\\r\\n          <td>{{ x.dueDate | date: 'mediumDate'}}</td>\\r\\n          <td>\\r\\n            <a class=\\\"btn btn-link btn-sm\\\" (click)=\\\"removeTodo(x)\\\">Delete</a>\\r\\n            <a class=\\\"btn btn-link btn-sm\\\" (click)=\\\"editTodo(x);fullListTodo = false;quickAddTodo = true\\\">Edit</a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"fullListTodo = false\\\">Close</button>\\r\\n  </div>\\r\\n</clr-modal>\\r\\n\\r\\n<clr-modal [(clrModalOpen)]=\\\"fullListAddress\\\" [clrModalSize]=\\\"'xl'\\\">\\r\\n  <h3 class=\\\"modal-title\\\">All Employees</h3>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th class=\\\"left\\\">Name</th>\\r\\n          <th class=\\\"left\\\"></th>\\r\\n          <th>Street Address</th>\\r\\n          <th>City</th>\\r\\n          <th>State</th>\\r\\n          <th>Zip</th>\\r\\n          <th>Phone</th>\\r\\n          <th>Email</th>\\r\\n          <th>Created</th>\\r\\n          <th></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let x of AddressItems | async\\\">\\r\\n          <td class=\\\"left\\\">{{ x.firstname + \\\" \\\"+x.lastname }}</td>\\r\\n          <td><img src=\\\"{{ x.profilepicture }}\\\" class=\\\"inline-profile-pic\\\"/></td>\\r\\n          <td>{{ x.streetaddress }}</td>\\r\\n          <td>{{ x.city}}</td>\\r\\n          <td>{{ x.state}}</td>\\r\\n          <td>{{ x.zip}}</td>\\r\\n          <td>{{ x.phone}}</td>\\r\\n          <td>{{ x.email}}</td>\\r\\n          <td>{{ (x.createdon  + ' UTC') | date: 'MM/dd/yy hh:mm a'}}</td>\\r\\n          <td>\\r\\n            <a class=\\\"btn btn-link btn-sm\\\" (click)=\\\"removePerson(x)\\\">Delete</a>\\r\\n            <a class=\\\"btn btn-link btn-sm\\\" (click)=\\\"editAddress(x);fullListAddress = false;quickAddAddress = true\\\">Edit</a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"fullListAddress = false\\\">Close</button>\\r\\n  </div>\\r\\n</clr-modal>\\r\\n\\r\\n<clr-modal [(clrModalOpen)]=\\\"technicalInformation\\\" [clrModalSize]=\\\"'xl'\\\">\\r\\n  <h3 class=\\\"modal-title\\\">Technical Information</h3>\\r\\n\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"clr-row\\\">\\r\\n      <div class=\\\"clr-col-lg-12 clr-col-md-12 clr-col-12\\\">\\r\\n        <h4>Current Deployment Timeline</h4>\\r\\n        <img src=\\\"https://dev.azure.com/KillerDemo/KillerDemo/_apis/build/status/KillerDemo?branchName=master\\\" />\\r\\n\\r\\n        <div *ngIf=\\\"!buildRunning\\\">No builds running currently.</div>\\r\\n        <div *ngIf=\\\"buildRunning\\\">Currently running build timeline.</div>\\r\\n        <div *ngIf=\\\"!buildRunning && lastBuiltID!=0\\\">Last build timeline.</div>\\r\\n        <ul class=\\\"clr-timeline clr-timeline-horizontal\\\">\\r\\n          <li *ngFor=\\\"let x of ptl | async\\\" class=\\\"clr-timeline-step\\\">\\r\\n            <div class=\\\"clr-timeline-step-header\\\">{{ x.starttime }}</div>\\r\\n            <!-- need to use the anguler stuff here-->\\r\\n            <clr-spinner *ngIf=\\\"x.current\\\" clrMedium aria-label=\\\"In progress\\\">Fetching data</clr-spinner>\\r\\n            <clr-icon *ngIf=\\\"!x.current\\\" [attr.shape]=\\\"x.labelType\\\" [attr.aria-current]=\\\"x.labelText\\\" [attr.aria-label]=\\\"x.labelText\\\"></clr-icon>\\r\\n            <div class=\\\"clr-timeline-step-body\\\">\\r\\n              <span class=\\\"clr-timeline-step-title\\\">{{ x.title }}</span>\\r\\n              <span class=\\\"clr-timeline-step-description\\\">{{ x.desc }}</span>\\r\\n            </div>\\r\\n            <!-- Only display this if the last step is complete\\r\\n        <button class=\\\"btn btn-sm\\\" onclick=\\\"location.reload(true)\\\" >Action</button>-->\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n        <div class=\\\"clr-row\\\">\\r\\n          <div class=\\\"clr-col-lg-12 clr-col-md-12 clr-col-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header\\\">\\r\\n                New Employee Hosting\\r\\n              </div>\\r\\n              <div class=\\\"card-block\\\">\\r\\n                <div class=\\\"card-text\\\">\\r\\n                  <div class=\\\"card-block\\\">\\r\\n                    <ul class=\\\"list p7\\\">\\r\\n                      <li>Web.UI Host: {{ this.href  }} - node.Js Linux</li>\\r\\n                      <li>Web.UI Deploy: {{ this.env.deployLocation }}</li>\\r\\n                      <li>Web.API Host: {{ this.env.urlPerson }} - .net Core 2.2 Linux</li>\\r\\n                      <li>Web.API Deploy: {{ this.env.deployLocation }}</li>\\r\\n                      <li>DB Type: Postgres</li>\\r\\n                      <li>DB Deploy: {{ this.env.deployLocation }}</li>\\r\\n                      <li>DB Host: <span>killerdemo_AddressBook</span> </li>\\r\\n                      <li>DB Client Name: <span>PostgresSQL</span> </li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"clr-col-lg-12 clr-col-md-12 clr-col-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header\\\">\\r\\n                Employee Onboarding Tasks Hosting\\r\\n              </div>\\r\\n              <div class=\\\"card-block\\\">\\r\\n                <div class=\\\"card-text\\\">\\r\\n                  <div class=\\\"card-block\\\">\\r\\n                    <ul class=\\\"list p7\\\">\\r\\n                      <li>Web.UI Host: {{ this.href  }} - node.Js Linux</li>\\r\\n                      <li>Web.UI Deploy: {{ this.env.deployLocation }}</li>\\r\\n                      <li>Web.API Host: {{ this.env.urlToDo }} - .net Core 2.2 Linux</li>\\r\\n                      <li>Web.API Deploy: {{ this.env.deployLocation }}</li>\\r\\n                      <li>DB Type: Redis</li>\\r\\n                      <li>DB Deploy: {{ this.env.deployLocation }}</li>\\r\\n                      <li>DB Host: <span *ngIf=\\\"(this.redisInfo | async) as ri; else loading\\\">{{ ri.url }}</span> </li>\\r\\n                      <li>DB Client Name: <span *ngIf=\\\"(this.redisInfo | async) as ri; else loading\\\">{{ ri.clientName }}</span> </li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"clr-col-lg-12 clr-col-md-12 clr-col-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header\\\">\\r\\n                Real Time Task Hosting\\r\\n              </div>\\r\\n              <div class=\\\"card-block\\\">\\r\\n                <div class=\\\"card-text\\\">\\r\\n                  <div class=\\\"card-block\\\">\\r\\n                    <ul class=\\\"list p7\\\">\\r\\n                      <li>Web.API Host: {{ this.env.urlToDo }} - .net Core 2.2 Linux</li>\\r\\n                      <li>Web.API Deploy: {{ this.env.deployLocation }}</li>\\r\\n                      <li>Pub/Sub Message Host: Kafka</li>\\r\\n                      <li>Pub/Sub Type: Kafka</li>\\r\\n                      <li>Pub/Sub Location: On Prem - PKS</li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</clr-modal>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Todo } from '../../app/models/todo';\r\nimport { Person } from '../../app/models/person';\r\nimport { RedisInfo } from '../../app/models/redisinfo';\r\nimport { PizzaTrackerTimeline } from '../../app/models/pizzatrackertimline';\r\n//import { DadJoke } from '../../app/models/dadjoke';\r\nimport { environment } from '../../environments/environment';\r\nimport * as signalR from \"@microsoft/signalr\";\r\nimport { KafkaData } from '../../app/models/kafkadata';\r\nimport { from } from 'rxjs';\r\nimport { catchError, take } from 'rxjs/operators';\r\nimport { interval } from 'rxjs/internal/observable/interval'\r\nimport { startWith, switchMap } from \"rxjs/operators\";\r\nimport { templateJitUrl } from '@angular/compiler';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  baseToDoUrl: string = environment.urlToDo;\r\n  baseDadUrl: string = environment.urlDadJoke;\r\n  basePersonUrl: string = environment.urlPerson;\r\n  baseDevOpsUrl: string = environment.urlDevOps;\r\n\r\n  public ptld: any;\r\n  public arr: Array<PizzaTrackerTimeline>;\r\n  public tempLogs: any;\r\n  public logLine: any;\r\n  public httpOptions: any = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      //'Authorization': 'Basic OmF0Mmp4amVnZno2cHZjNTJtc2xoemxuN3lzbm9yY2xhbndkbHB6dW1pZm1lc241dG9idGE='\r\n      'Authorization': environment.azPAT\r\n    })\r\n  };\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  display_Json() {\r\n    this.ptld = this.get_BuildDefinition(2).pipe();\r\n    this.ptld.subscribe((data) => console.log(JSON.stringify(data)));\r\n  }\r\n\r\n  get_pizzatrackertimeline(myData: any) {\r\n    const myttlArr = Array.of(myData.value);\r\n    const map = new Map();\r\n    map.set(3, \"Initialize Job, Gathering Job Information.\");\r\n    map.set(4, \"Checkout, Downloading the code.\");\r\n    map.set(5, \"Build Images, Compiling code and building images.\");\r\n    map.set(6, \"Push Images, Pushing images to ACR.\");\r\n    map.set(7, \"Clean Up, Cleaning up the resources.\");\r\n    map.set(8, \"Finalize Job, Job finished and finalized.\");\r\n    this.arr = [];\r\n    for (let pttl of myttlArr[0]) {\r\n      if (pttl.id > 2 && pttl.id < 9) {\r\n        this.tempLogs = this.get_DetailedLogs(pttl.url.substring(pttl.url.indexOf('builds/') + 7)).pipe();\r\n        this.tempLogs.subscribe((data) => this.logLine = data);\r\n        let abc: PizzaTrackerTimeline = {\r\n          startTime: pttl.createdOn,\r\n          endTime: pttl.lastChangedOn,\r\n          labelType: \"success-standard\", //success-standard, spinner, error, circle\r\n          labelText: \"Text for \" + pttl.id,\r\n          //title: \"Number \" + pttl.id,\r\n          title: map.get(pttl.id).split(',')[0],\r\n          //desc: \"This is number \" + pttl.id,\r\n          desc: map.get(pttl.id).split(',')[1],\r\n          current: ((pttl.id - 1) != myttlArr[0].length || pttl.id == (myttlArr[0].length - 3)) ? false : true,\r\n          disabled: \"\", //Used for last step complete\r\n          id: pttl.id\r\n        }\r\n        this.arr.push(abc);\r\n      }\r\n    }\r\n    const arrSource = Array.of(this.arr);\r\n    return from(arrSource);\r\n  }\r\n\r\n  get_DetailedLogs(logIDs: string) {\r\n    var url = this.baseDevOpsUrl + 'builds/' + logIDs + '?api-version=5.1';\r\n    return this.httpClient.get<any[]>(url, this.httpOptions);\r\n  }\r\n\r\n  get_BuildDefinition(id: number) {\r\n    var url = this.baseDevOpsUrl + 'definitions/' + id + '?api-version=5.1';\r\n    return this.httpClient.get<any[]>(url, this.httpOptions);\r\n  }\r\n\r\n  get_RunningBuild(defid: number) {\r\n    var url = this.baseDevOpsUrl + 'builds?api-version=5.1&definitions=' + defid + '&statusFilter=inProgress';\r\n    return this.httpClient.get<any[]>(url, this.httpOptions);\r\n  }\r\n\r\n  get_LastRunBuild(defid: number) {\r\n    var url = this.baseDevOpsUrl + 'builds?api-version=5.1&definitions=' + defid;\r\n    return this.httpClient.get<any[]>(url, this.httpOptions);\r\n  }\r\n\r\n  get_BuildLogs(buildid: number) {\r\n    var url = this.baseDevOpsUrl + 'builds/' + buildid + '/logs?api-version=5.1';\r\n    return this.httpClient.get<any[]>(url, this.httpOptions);\r\n  }\r\n\r\n  get_Todos() {\r\n    var url = this.baseToDoUrl + 'api/todo/';\r\n    //console.log(url);\r\n    return this.httpClient.get<Todo[]>(url);\r\n  }\r\n\r\n  get_CreateNewEmployeeTodos(id, name) {\r\n    var url = this.baseToDoUrl + 'api/todo/CreateNewEmployeeTasks?id=' + id + '&name=' + encodeURI(name);\r\n    console.log(url);\r\n    this.httpClient.get<any[]>(url).subscribe();\r\n    return this.get_Todos();\r\n  }\r\n\r\n  get_RedisInformation() {\r\n    var url = this.baseToDoUrl + 'api/RedisInfo/';\r\n    return this.httpClient.get<RedisInfo>(url);\r\n  }\r\n\r\n  delete_Todos(id: Number) {\r\n    var url = this.baseToDoUrl + 'api/todo/' + id;\r\n    //console.log(url);\r\n    this.httpClient.delete(url).subscribe();\r\n    return true;\r\n  }\r\n\r\n  put_Todos(todo: Todo) {\r\n    //console.log(todo);\r\n    var url = this.baseToDoUrl + 'api/todo/' + todo.id;\r\n    //console.log(url);\r\n    this.httpClient.put<Todo>(url, todo).subscribe();\r\n    return true;\r\n  }\r\n\r\n  get_Persons() {\r\n    var url = this.basePersonUrl + 'api/Person/';\r\n    //console.log(url);\r\n    return this.httpClient.get<Person[]>(url);\r\n  }\r\n\r\n    call_TodoForNewEmployee(person: Person) {\r\n        console.log(person);\r\n        this.get_CreateNewEmployeeTodos(person.id, person.firstname + \" \" + person.lastname)\r\n  }\r\n\r\n  put_Address(person: Person) {\r\n    //console.log(todo);\r\n    var newEmp = (person.id == \"{00000000-0000-0000-0000-000000000000}\");\r\n    var url = this.basePersonUrl + 'api/Person/' + person.id;\r\n    //console.log(url);\r\n    if (newEmp) {\r\n      this.httpClient.put<Person>(url, person).subscribe(data => this.call_TodoForNewEmployee(data));\r\n    } else {\r\n      this.httpClient.put<Person>(url, person).subscribe();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  delete_Person(id: string) {\r\n    var url = this.basePersonUrl + 'api/Person/' + id;\r\n    //console.log(url);\r\n    this.httpClient.delete(url).subscribe();\r\n    url = this.baseToDoUrl + 'api/todo/' + id + \"/DeleteByEmployeeId\";\r\n    this.httpClient.get(url).subscribe();\r\n    return true;\r\n  }\r\n}\r\n\r\nexport class SignalRService {\r\n  public data: KafkaData[];\r\n    baseToDoUrl: string = environment.urlToDo;\r\n\r\n  private hubConnection: signalR.HubConnection\r\n\r\n  public startConnection = () => {\r\n    var url = this.baseToDoUrl + 'kafka';\r\n    console.log(url);\r\n\r\n    this.hubConnection = new signalR.HubConnectionBuilder()\r\n        .withUrl(url)\r\n      .build();\r\n\r\n    this.hubConnection\r\n        .start()\r\n      .then(() => console.log('Connection started'))\r\n      .catch(err => console.log('Error while starting connection: ' + err))\r\n  }\r\n\r\n  public addTransferKafkaDataListener = () => {\r\n    this.hubConnection.on('transferkafkadata', (data) => {\r\n      this.data = data;\r\n      //console.log(data);\r\n    });\r\n  }\r\n}\r\n","import { ClrDatagridStringFilterInterface } from \"@clr/angular\";\r\n\r\n//Models\r\nimport { Todo } from '../../app/models/todo';\r\nimport { Person } from '../../app/models/person'\r\n\r\n/**\r\n* Class for filtering Field metadata in datagrids on filterType property of model\r\n*/\r\nexport class NameFilter implements ClrDatagridStringFilterInterface<Todo> {\r\n    accepts(todo: Todo, search: string): boolean {\r\n        return todo.employeeName.toLowerCase().indexOf(search) >= 0;\r\n    }\r\n}\r\n\r\nexport class EmployeeNameFilter implements ClrDatagridStringFilterInterface<Person> {\r\n  accepts(person: Person, search: string): boolean {\r\n    console.log('here');\r\n    return (person.firstname + \" \" + person.lastname).toLocaleLowerCase().indexOf(search.trim().toLocaleLowerCase()) >= 0;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \".inline-profile-pic{\\r\\n    max-height:30px;\\r\\n    max-width:30px;\\r\\n}\\r\\n\\r\\n.form-profile-pic{\\r\\n    max-height:100px;\\r\\n    max-width:100px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5saW5lLXByb2ZpbGUtcGlje1xyXG4gICAgbWF4LWhlaWdodDozMHB4O1xyXG4gICAgbWF4LXdpZHRoOjMwcHg7XHJcbn1cclxuXHJcbi5mb3JtLXByb2ZpbGUtcGlje1xyXG4gICAgbWF4LWhlaWdodDoxMDBweDtcclxuICAgIG1heC13aWR0aDoxMDBweDtcclxufVxyXG4iXX0= */\"","import { Component, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Observable, interval } from 'rxjs';\r\nimport { Todo } from './../app/models/todo';\r\nimport { Person } from './../app/models/person';\r\nimport { RedisInfo } from './../app/models/redisinfo';\r\nimport { PizzaTrackerTimeline } from './../app/models/pizzatrackertimline';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from './../Shared/Services/data.service';\r\nimport { take, catchError, map } from 'rxjs/operators';\r\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { environment } from './../environments/environment'\r\nimport { SignalRService } from './../Shared/Services/data.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport '@clr/icons';\r\nimport '@clr/icons/shapes/all-shapes';\r\nimport { startWith, switchMap } from \"rxjs/operators\";\r\nimport { NameFilter, EmployeeNameFilter } from \"../Shared/Util/utilFilters\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n\r\n    public nameFilter = new NameFilter();\r\n    public createdByFilter = new NameFilter();\r\n    public empNameFilter = new EmployeeNameFilter();\r\n\r\n    title = 'Killer Demo';\r\n    public env;\r\n\r\n    public errorMessage: string = '';\r\n    public href: string = \"\";\r\n\r\n    public todoItems: Observable<Todo[]>;\r\n    public ptl: Observable<PizzaTrackerTimeline[]>;\r\n    public redisInfo: Observable<RedisInfo>;\r\n    public loading: any;\r\n    public ptld: any;\r\n    public quickAddTodo: any;\r\n    public quickAddAddress: any;\r\n    public fullListTodo: any;\r\n    public fullListAddress: any;\r\n    public AddressItems: Observable<Person[]>;\r\n\r\n\r\n\r\n    public todoForm: FormGroup;\r\n    public addressForm: FormGroup;\r\n    public lastBuiltID: number = 0;\r\n    public contld: any;\r\n    public buildRunning: boolean = false;\r\n    public lastRunBuildDetails: any;\r\n\r\n    public technicalInformation: any;\r\n\r\n    private fullNameSelected = \"\";\r\n\r\n    ngOnInit() {\r\n        this.signalRService.startConnection();\r\n        this.signalRService.addTransferKafkaDataListener();\r\n        this.startHttpRequest();\r\n    }\r\n\r\n\r\n    constructor(@Inject(DOCUMENT) private document: Document,\r\n        private dataService: DataService, private router: Router,\r\n        private httpClient: HttpClient,\r\n        public signalRService: SignalRService) {\r\n\r\n        this.todoForm = new FormGroup({\r\n            todoText: new FormControl(null, Validators.required),\r\n            dueDate: new FormControl(null, Validators.required),\r\n            createdBy: new FormControl(null, Validators.required),\r\n            employeeName: new FormControl(null),\r\n            id: new FormControl(''),\r\n            createdDate: new FormControl(''),\r\n            employeeId: new FormControl(null, Validators.required),\r\n        });\r\n\r\n        this.addressForm = new FormGroup({\r\n            firstname: new FormControl(null, Validators.required),\r\n            lastname: new FormControl(null, Validators.required),\r\n            streetaddress: new FormControl(null, Validators.required),\r\n            city: new FormControl(null, Validators.required),\r\n            state: new FormControl(null, Validators.required),\r\n            zip: new FormControl(null, Validators.required),\r\n            phone: new FormControl(null),\r\n            email: new FormControl(null),\r\n            profilepicture: new FormControl(''),\r\n            createdon: new FormControl(''),\r\n            id: new FormControl('')\r\n        });\r\n        this.populateAddresses();\r\n        this.populateTodoFirstLoad();\r\n        this.getPizzatrackertimeline()\r\n\r\n        this.href = document.location.protocol + '//' + document.location.hostname + ':' + document.location.port;\r\n        this.redisInfo = this.dataService.get_RedisInformation();\r\n        this.redisInfo.subscribe();\r\n\r\n        this.env = environment;\r\n        //console.log(this.env);\r\n        //console.log(environment);\r\n    }\r\n\r\n    private startHttpRequest = () => {\r\n        this.httpClient.get(environment.urlToDo + 'api/kafka')\r\n            .subscribe(res => {\r\n                console.log(res);\r\n            })\r\n    }\r\n\r\n    removeTodo = function (item: Todo) {\r\n        this.dataService.delete_Todos(item.id);\r\n        this.populateTodo();\r\n    }\r\n\r\n    onTodoSubmit() {\r\n        let postedTodo: Todo;\r\n\r\n        postedTodo = {\r\n            createdBy: this.todoForm.value.createdBy,\r\n            createdDate: (this.todoForm.value.createdDate != null ? this.todoForm.value.createdDate : new Date()),\r\n            dueDate: this.todoForm.value.dueDate,\r\n            id: (this.todoForm.value.id != null ? this.todoForm.value.id : 0),\r\n            employeeId: this.todoForm.value.employeeId,\r\n            employeeName: this.fullNameSelected,\r\n            todoText: this.todoForm.value.todoText\r\n        }\r\n        console.log(postedTodo);\r\n\r\n        this.dataService.put_Todos(postedTodo);\r\n        this.todoForm.reset();\r\n\r\n        this.populateTodo();\r\n    }\r\n\r\n    public onChange($event) {\r\n        this.fullNameSelected = $event.target.options[$event.target.options.selectedIndex].text;\r\n    }\r\n\r\n    editTodo(todo: Todo) {\r\n        //console.log(todo);\r\n        this.todoForm = new FormGroup({\r\n            todoText: new FormControl(todo.todoText, Validators.required),\r\n            dueDate: new FormControl(todo.dueDate, Validators.required),\r\n            createdBy: new FormControl(todo.createdBy, Validators.required),\r\n            employeeName: new FormControl(todo.employeeName),\r\n            id: new FormControl(todo.id),\r\n            createdDate: new FormControl(todo.createdDate),\r\n            employeeId: new FormControl(todo.employeeId, Validators.required),\r\n        });\r\n    }\r\n\r\n    private getPizzaTrackerItems(myData: any) {\r\n        this.ptl = this.dataService.get_pizzatrackertimeline(myData).pipe();\r\n        this.ptl.subscribe(val => console.log(val));\r\n    }\r\n\r\n    private getRunningBuilds(myData: any) {\r\n        if (myData.count == 0) {\r\n            this.buildRunning = false;\r\n            console.log(\"No Running Build.\");\r\n            if (this.lastBuiltID == 0) {\r\n                let tempRunBuild = this.dataService.get_LastRunBuild(2).pipe();\r\n                tempRunBuild.subscribe((data) => this.lastRunBuildDetails = data);\r\n                if (this.lastRunBuildDetails != undefined) {\r\n                    this.lastBuiltID = this.lastRunBuildDetails.value[0].id;\r\n                }\r\n            }\r\n            else {\r\n                this.ptld = this.dataService.get_BuildLogs(this.lastBuiltID).pipe();\r\n                this.ptld.subscribe((data) => this.getPizzaTrackerItems(data)); this.ptld = '';\r\n            }\r\n        } else {\r\n            this.buildRunning = true;\r\n            this.lastBuiltID = myData.value[0].id;\r\n            this.ptld = this.dataService.get_BuildLogs(myData.value[0].id).pipe();\r\n            this.ptld.subscribe((data) => this.getPizzaTrackerItems(data));\r\n        }\r\n    }\r\n\r\n    private getPizzatrackertimeline() {\r\n        this.dataService.display_Json();\r\n        interval(2000).pipe(\r\n            startWith(0),\r\n            switchMap(() => this.dataService.get_RunningBuild(2))\r\n        ).subscribe((data) => this.getRunningBuilds(data));\r\n\r\n    }\r\n\r\n    private populateTodo() {\r\n        this.todoItems = this.dataService.get_Todos();\r\n        this.todoItems.subscribe();\r\n    }\r\n    private populateTodoFirstLoad() {\r\n        this.todoItems = this.dataService.get_Todos();\r\n\r\n        var ds = this.dataService;\r\n        this.todoItems.subscribe(result => {\r\n            if (result.length === 0) {\r\n                //console.log(result.length)\r\n                this.AddressItems.subscribe(x => {\r\n                    var num = 1;\r\n                    x.forEach(function (y) {\r\n                        //console.log(y.id)\r\n                        setTimeout(() => {\r\n                            ds.get_CreateNewEmployeeTodos(y.id, y.firstname + \" \" + y.lastname);\r\n                            \r\n                        }, num * 1000);\r\n                        num++;\r\n                    })                    \r\n                })\r\n            }\r\n        })        \r\n    }\r\n\r\n  onAddressSubmit() {\r\n    let postedAddress: Person;\r\n\r\n    postedAddress = {\r\n      firstname: this.addressForm.value.firstname,\r\n      lastname: this.addressForm.value.lastname,\r\n      streetaddress: this.addressForm.value.streetaddress,\r\n      city: this.addressForm.value.city,\r\n      state: this.addressForm.value.state,\r\n      zip: this.addressForm.value.zip,\r\n      phone: this.addressForm.value.phone,\r\n      createdon: this.addressForm.value.createdon,\r\n      email: this.addressForm.value.email,\r\n      profilepicture: this.addressForm.value.profilepicture,\r\n      id: (this.addressForm.value.id != null && this.addressForm.value.id != \"\" ? this.addressForm.value.id : \"{00000000-0000-0000-0000-000000000000}\")\r\n    }\r\n\r\n    this.dataService.put_Address(postedAddress);\r\n    this.addressForm.reset();\r\n      setTimeout(() => {\r\n          this.populateAddresses();\r\n          this.populateTodo();\r\n      }, 1000);\r\n  }\r\n\r\n  private populateAddresses() {\r\n    this.AddressItems = this.dataService.get_Persons().pipe(take(5));\r\n    //console.log(JSON.stringify(this.AddressItems));\r\n    this.AddressItems.subscribe();\r\n  }\r\n\r\n  editAddress(person: Person) {\r\n    //console.log(person);\r\n\r\n    this.addressForm = new FormGroup({\r\n      firstname: new FormControl(person.firstname, Validators.required),\r\n      lastname: new FormControl(person.lastname, Validators.required),\r\n      streetaddress: new FormControl(person.streetaddress, Validators.required),\r\n      city: new FormControl(person.city, Validators.required),\r\n      state: new FormControl(person.state, Validators.required),\r\n      zip: new FormControl(person.zip, Validators.required),\r\n      phone: new FormControl(person.phone),\r\n      createdon: new FormControl(person.createdon),\r\n      email: new FormControl(person.email),\r\n      profilepicture: new FormControl(person.profilepicture),\r\n      id: new FormControl(person.id)\r\n    });\r\n    this.ppData = person.profilepicture;\r\n    this.populateAddresses();\r\n  }\r\n\r\n  changeFile(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n  public fileBlob: any;\r\n  public ppData: any;\r\n  uploadFile(event) {\r\n    if (event.target.value) {\r\n      const file = event.target.files[0];\r\n      const type = file.type;\r\n      this.changeFile(file).then((base64: string): any => {\r\n        console.log(base64);\r\n        //this.fileBlob = this.b64Blob([base64], type);\r\n        //console.log(this.fileBlob)\r\n        this.ppData = base64;\r\n        this.addressForm.get('profilepicture').setValue(base64);\r\n      });\r\n    } else alert('Nothing')\r\n  }\r\n\r\n  removePerson = function (item: Person) {\r\n      this.dataService.delete_Person(item.id);\r\n      setTimeout(() => {\r\n          this.populateAddresses();\r\n          this.populateTodo();\r\n      }, 1000);\r\n    }\r\n}\r\n\r\nfunction uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n\r\n\r\n \r\n","import { Injectable } from '@angular/core';;\r\nimport { from } from 'rxjs';\r\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\r\ndeclare var window: any;\r\n//import { listFiles } from 'list-files-in-dir';\r\n\r\n@Injectable()\r\nexport class AppInitService {\r\n\r\n  // This is the method you want to call at bootstrap\r\n  // Important: It should return a Promise\r\n  public init() {\r\n    return from(\r\n      fetch('assets/app-config.json').then(function (response) {\r\n        return response.json();\r\n      })\r\n    ).pipe(\r\n      map((config) => {\r\n        window.config = config;\r\n        return\r\n      })).toPromise();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ClarityModule } from '@clr/angular';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport * as signalR from \"@aspnet/signalr\";\r\nimport { SignalRService } from './../Shared/Services/data.service';\r\nimport { AppInitService } from './app.init'\r\n\r\nexport function init_app(appLoadService: AppInitService) {\r\n  return () => appLoadService.init();\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ClarityModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n      ReactiveFormsModule,\r\n\r\n  ],\r\n  providers: [SignalRService, AppInitService,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: init_app,\r\n      deps: [AppInitService],\r\n      multi: true\r\n    }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","declare var window: any;\r\n\r\nexport class DynamicEnvironment {\r\n  public get isProduction() {\r\n    return window.config.isProduction;\r\n  }\r\n\r\n  public get urlAddress() {\r\n    return window.config.urlAddress;\r\n  }\r\n  public get urlToDo() {\r\n    return window.config.urlToDo;\r\n  }\r\n  public get deployLocation() {\r\n    return window.config.deployLocation;\r\n  }\r\n  public get urlDadJoke() {\r\n    return window.config.urlDadJoke;\r\n  }\r\n  public get version() {\r\n    return window.config.version;\r\n  }\r\n  public get urlPerson() {\r\n    return window.config.urlPerson;\r\n  }\r\n  public get urlDevOps() {\r\n    return window.config.urlDevOps;\r\n  }\r\n  public get azPAT() {\r\n    return window.config.azPAT;\r\n  }\r\n}\r\n","\r\nimport { DynamicEnvironment } from './dynamic-environment';\r\nclass Environment extends DynamicEnvironment {\r\n\r\n  public production: boolean;\r\n  constructor() {\r\n    super();\r\n    this.production = false;\r\n  }\r\n}\r\n\r\nexport const environment = new Environment();\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}