# Starter pipeline
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  - group: aws-ak-sk
  - group: namespace-vars

steps:

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x' 
    addToPath: true 
    #architecture: 'x64' # Options: x86, x64 (this argument applies only on Windows agents)

- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.12.24'

- task: AWSPowerShellModuleScript@1
  inputs:
    awsCredentials: 'vCORE AWS Lab'
    regionName: $(region)
    scriptType: 'inline'
    inlineScript: |
            
            $NewLine = "`n"
            Install-Module -Name PSWriteColor -Force

            Write-Color "Starting pipeline...$NewLine" -Color "Cyan"
            
            Write-Color "Current directory is: ", "$((pwd).Path)" -Color "White", "Yellow"; $NewLine
            
            (pwd).Path; $NewLine
      
            Write-Color "Variable group test:" -Color "Cyan"; $NewLine

            Write-Color "Cloud provider is:", " $(cloud_provider)" -Color "White", "Magenta"; $NewLine

            Write-Color "Service is:", "$(service)" -Color "White", "Magenta"; $NewLine

            Write-Color "Environment is:", "$(environment)"  -Color "White", "Magenta"; $NewLine

            Write-Color "Region is:", "$(region)" -Color "White", "Magenta"; $NewLine

            Write-Color "Module is:","$(module)" -Color "White", "Magenta"; $NewLine
      
            Write-Color "Installing runway..." -Color "Cyan"; $NewLine

            pip install runway==1.6.0

            Write-Color "Runway installed." -Color "Green"; $NewLine

            Write-Color "Current directory is: ", "$((pwd).Path)" -Color "White", "Yellow"; $NewLine
      
            Write-Color "Python version is: ", "$(python --version)" -Color "White", "Yellow"; $NewLine
      
            Write-Color "pip version is: ", "$(pip --version)" -Color "White", "Yellow"; $NewLine
      
            Write-Color "Runway version is: ", "$(runway --version)" -Color "White", "Yellow"; $NewLine

            Write-Color "Terraform version is: ", "$(terraform --version)" -Color "White", "Yellow"; $NewLine
      
            Write-Color "Setting CI variable..." -Color "Yellow"; $NewLine

            $env:CI="1"; $NewLine

            Write-Color "CI variable is:", "($null = interactive, 1 = CI)" -Color "White", "Magenta"

            Write-Color "$env:CI" -Color "Green"; $NewLine
      
            Write-Color "Current directory is: ", "$((pwd).Path)" -Color "White", "Yellow"; $NewLine

            Write-Color "Importing InitializeTerraformWorkspace module..."  -Color "Yellow"; $NewLine

            Import-Module .\scripts\InitializeTerraformWorkspace

            Write-Color "InitializeTerraformWorkspace module imported successfully"  -Color "Green"; $NewLine
      
            Write-Color 'Changing directory to $(cloud_provider)\$(service)\$(environment)' -Color "Yellow"; $NewLine

            cd $(Build.Repository.LocalPath)\runway\multicloud\$(cloud_provider)\$(service)\$(environment)

            Write-Color "Current directory is: ", "$((pwd).Path)" -Color "White", "Yellow"; $NewLine

            Write-Color "Initializing Terraform workspaces for the selected modules"
           
            Initialize-TerraformWorkspace -Environment $(environment) -AllModules $true
      
            Write-Color "Current directory is: ", "$((pwd).Path)" -Color "White", "Yellow"; $NewLine
      
            Write-Color "Running runway plan in $(cloud_provider)\$(module)\$(environment)" -Color "Yellow"; $NewLine

            Write-Host "Write-Host test" -ForegroundColor "Green"

            runway deploy --tag "bootstrap-modules" --tag "us-west-1"

            runway plan --tag "tf-modules" --tag "us-west-1"

    workingDirectory: '$(Build.Repository.LocalPath)\runway\'

    errorActionPreference: 'continue'