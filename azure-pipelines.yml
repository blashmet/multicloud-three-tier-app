# Starter pipeline
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x' 
    addToPath: true 
    #architecture: 'x64' # Options: x86, x64 (this argument applies only on Windows agents)

- script: |

    echo "Starting pipeline..."
    echo "Current directory is:"
    pwd

    echo "python version is"
    python --version

    echo "pip version is"
    pip --version

    echo "installing pipenv"
    pip install pipenv

    echo "pipenv version is"
    pipenv --version

  displayName: 'Verify Python install and install pipenv.'

- script: |

    echo "Starting pipeline..."
    echo "Current directory is:"
    pwd

    echo "python version is"
    python --version

    echo "pip version is"
    pip --version

    echo "pipenv version is"
    pipenv --version

    echo "Generating requirements.txt"
    pipenv lock -r > requirements.txt

    echo "Installing dependencies..."
    pip install -r requirements.txt
    echo "Syncing python virtual env"
    pipenv sync

    echo "Setting CI variable..."
    export CI=1
    echo 'CI variable is:($null = interactive, 1 = CI\CD)'
    echo "$CI"

    echo "Current directory is:"
    pwd

    echo 'Changing directory to ${cloud_provider}\${service_name}\${environment}'
    cd (Build.Repository.LocalPath)/runway/multicloud/aws/demo-service-1/dev

    echo "Runway version is:"
    pipenv run runway --version

    echo "Running pipenv run runway deploy in ${cloud_provider}\${service_name}\${environment}"
    pipenv run runway deploy

  workingDirectory: $(Build.Repository.LocalPath)/runway/

  displayName: 'Run runway command in ${cloud_provider}\${service_name}\${environment}'